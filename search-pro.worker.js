const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":35,\"nextId\":35,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"2@0\",\"4\":\"3\",\"5\":\"3@0\",\"6\":\"4\",\"7\":\"4@0\",\"8\":\"5\",\"9\":\"6\",\"10\":\"6#_1-本次老代码线上问题sql\",\"11\":\"6#_2-问题总结\",\"12\":\"7\",\"13\":\"8\",\"14\":\"8@0\",\"15\":\"9\",\"16\":\"9@0\",\"17\":\"10\",\"18\":\"10@0\",\"19\":\"11\",\"20\":\"11#_1-拉取一个-postgresql-服务器-docker-镜像\",\"21\":\"11#_2-从-postgresql-服务器-docker-镜像运行容器\",\"22\":\"11#_3-连接到postgresql服务器\",\"23\":\"11@1\",\"24\":\"12\",\"25\":\"12#c-默认参数\",\"26\":\"12#_1-默认实参之后的参数也必须拥有默认实参\",\"27\":\"12#_2-非模板类的成员函数默认实参必须与类内的声明组合\",\"28\":\"12#_3-c-形参包展开有-6-个点\",\"29\":\"12@1\",\"30\":\"13\",\"31\":\"14\",\"32\":\"15\",\"33\":\"16\",\"34\":\"17\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,2],\"2\":[1],\"3\":[null,null,1],\"4\":[1,3],\"5\":[null,null,1],\"6\":[1,2],\"7\":[null,null,1],\"8\":[1,3],\"9\":[1],\"10\":[2,36],\"11\":[2,12],\"12\":[1,3],\"13\":[1,2],\"14\":[null,null,1],\"15\":[1,2],\"16\":[null,null,1],\"17\":[1,2],\"18\":[null,null,1],\"19\":[1,34],\"20\":[6,27],\"21\":[6,94],\"22\":[2,21],\"23\":[null,null,2],\"24\":[1],\"25\":[1],\"26\":[2,28],\"27\":[2,12],\"28\":[5,68],\"29\":[null,null,1],\"30\":[1,3],\"31\":[1],\"32\":[1],\"33\":[1],\"34\":[1]},\"averageFieldLength\":[1.5907199461493742,13.656486924137232,0.6186704506363949],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"h\":\"介绍页\",\"t\":[\"纸飞机的成长日记。\"]},\"2\":{\"h\":\"开发日记\"},\"3\":{\"c\":[\"项目开发\"]},\"4\":{\"h\":\"项目实战\",\"t\":[\"本栏主要记录生产上遇到的一些实际问题，以及一些技术总结。\"]},\"5\":{\"c\":[\"项目开发\"]},\"6\":{\"h\":\"学习笔记\",\"t\":[\"本栏主要记录并学习java开发。\"]},\"7\":{\"c\":[\"学习笔记\"]},\"8\":{\"h\":\"项目实战\",\"t\":[\"本栏主要记录生产上遇到的一些实际问题，以及一些技术总结。\"]},\"9\":{\"h\":\"记录一次线上sql问题优化\"},\"10\":{\"h\":\"1. 本次老代码线上问题sql\",\"t\":[\"-- select * from user where create_time >'2022-01-01' and create_time <= '2024-06-27' order by id desc limit 1500000\",\"主要出现问题的地方在范围查询上，由于数据量比较大，且范围查询导致索引失效。 经过分析，这条sql是先从数据库把数据从数据库查出后再拿到服务层排序。这个分数据库目前数据量为100万。考虑到数据库量比较大对sql进行如下优化：\",\"select * from user inner join ( select id from user where create_time >'2022-01-01' and create_time <= '2024-06-27' limit 1500000 ) tmp using(id) order by id desc;\",\"经过测试，速度确实快了一些。但是考虑到排序对服务层的压力还是比较大，将排序放到子查询中：\",\"select * from user inner join ( select id from user where create_time >'2022-01-01' and create_time <= '2024-06-27' order by id desc limit 1500000 ) tmp using(id);\"]},\"11\":{\"h\":\"2.问题总结\",\"t\":[\"实际测试，在不同数据量下这几种sql执行效果不同，在数据量较大时应尽量在存储引擎曾通过索引覆盖降低回表和优化排序，去优化sql，具体问题具体分析。\",\"在设计时就应该考虑了业务功能的合理性，避免不合理的业务需求。尽量像这种批量任务可以使用定时任务在低峰期定期执行。\",\"这种数据量比较大但是对一致性要求不高的业务可以考虑用从库慢慢执行。就算挂了也不影响核心链路。\",\"也可以上es。\"]},\"12\":{\"h\":\"数据库\",\"t\":[\"本栏主要记录生产上遇到的一些实际问题，以及一些技术总结。\"]},\"13\":{\"h\":\"设计模式\",\"t\":[\"本栏主要记录并学习设计模式。\"]},\"14\":{\"c\":[\"设计模式\"]},\"15\":{\"h\":\"前端开发\",\"t\":[\"本栏主要记录并学习前端开发。\"]},\"16\":{\"c\":[\"前端开发\"]},\"17\":{\"h\":\"前端开发\",\"t\":[\"本栏主要记录并学习前端开发。\"]},\"18\":{\"c\":[\"前端开发\"]},\"19\":{\"h\":\"docker下载并启动PostgreSQL\",\"t\":[\"PostgreSQL是一个开源的对象关系数据库管理系统。它已经存在了 30 多年，并标榜自己是“世界上最先进的开源关系数据库”。\",\"在轻松打包、部署和运行分布式应用程序方面，Docker已成为 IT 行业的标准。Docker 容器让您可以快速启动新应用程序，而不会因依赖项而使您的系统变得混乱。\",\"您可以使用 Docker 在容器中运行 PostgreSQL 数据库，就像它是远程服务器一样。Docker 容器基于开放标准，使容器能够在所有主要Linux 发行版、MacOS 和 Microsoft Windows 上运行。\",\"在 Docker 中运行 PostgreSQL 我们在这里要做的是下载PostgreSQL镜像，检查镜像是否准备好，使用特定参数运行镜像，最后连接到正在运行的PostgreSQL实例。\"]},\"20\":{\"h\":\"1. 拉取一个 PostgreSQL 服务器 Docker 镜像\",\"t\":[\"首先，我们需要从Docker Hub获取现有的 PostgreSQL 官方镜像。镜像适用于 PostgreSQL 版本 9、10、11、12 和 13。如果您需要特定版本，latest 请将标签更改 为所需版本。\",\"现在让我们拉取图像：\",\"sudo docker pull postgres:latest\",\"使用上述命令将从 Docker Hub 存储库中提取最新可用版本的 PostgreSQL。\"]},\"21\":{\"h\":\"2. 从 PostgreSQL 服务器 Docker 镜像运行容器\",\"t\":[\"在部署之前，您需要设置一个 Docker 卷或绑定安装来持久化您的数据库。否则，当容器重新启动时，您的数据将丢失。安装应该 /var/lib/postgresql/data 在容器内的目录中。\",\"出于本指南的目的，我们将创建一个 docker 卷并将其附加到您的 PostgreSQL 容器。\",\"以下命令将在您的本地计算机中创建卷，您可以稍后与 PostgreSQL 容器连接：\",\"sudo docker volume create postgres-volume\",\"现在你的机器上有 PostgreSQL 镜像和一个用于保存数据的卷，你可以部署一个容器：\",\"sudo docker run -d --name=postgres13 -p 5432:5432 -v postgres-volume:/var/lib/postgresql/data -e POSTGRES_PASSWORD=your_password postgres\",\"该 docker run 命令将在 Docker 容器中创建一个正在运行的 PostgreSQL 数据库。\",\"让我们分解一下这个语法。以下是该命令中每个参数的含义：\",\"-d 将以分离模式运行此容器，以便它在后台运行。 --name 将名称“postgres13”分配给您的容器实例。 -p会将 PostgreSQL 容器端口 5432 绑定到主机上的相同端口。您将能够localhost:5432 使用psql在您的主机上运行的PostgreSQL 客户端 ( )进行连接 。 -v选项将容器卷 ( /var/lib/postgresql)内的数据文件夹绑定到postgres-volume您在上一步中创建的本地 Docker 卷 ( )。 -e设置环境变量。在这种情况下，PostgreSQL 根密码。 postgres 是我们用来创建容器的图像的名称。 您可以通过列出正在运行的容器来检查容器是否正在运行：\",\"sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6cb3293fe725 postgres \\\"docker-entrypoint.s…\\\" 19 minutes ago Up 19 minutes 0.0.0.0:5432->5432/tcp, :::5432->5432/tcp postgres13\",\"恭喜！您的新 PostgreSQL 实例现在正在 Docker 上运行。\",\"此外，您可以使用以下命令检查正在运行的 PostgreSQL 容器的日志文件：\",\"sudo docker logs postgres13\"]},\"22\":{\"h\":\"3. 连接到PostgreSQL服务器\",\"t\":[\"您可以通过附加到容器并运行psql命令来获得交互式 PostgreSQL shell 。这提供了完整的 PostgreSQL 命令行界面，因此您可以使用所有熟悉的命令和标志。\",\"sudo docker exec -it postgres13 psql -U postgres\",\"psql如果您在主机上预安装了PostgreSQL 客户端，您还可以使用PostgreSQL 客户端连接 PostgreSQL Docker 实例。\"]},\"23\":{\"c\":[\"docker,PostgreSQL\"]},\"24\":{\"h\":\"C++默认参数\"},\"25\":{\"h\":\"C++默认参数\"},\"26\":{\"h\":\"1. 默认实参之后的参数也必须拥有默认实参\",\"t\":[\"void f(int ,int = 6,int); void f(int =4,int,int); void f(int a,int b,int c);{std::count<<a<<''<<''<<c<<'\\\\n'} int main(){ fn(4,6,10); }\",\"上面代码运行不会由任何问题。 原因：在函数声明中所拥有的默认实参之后的形参必须拥有在这个或同一作用域中先前的声明中所提供的默认实参。但是必须在当前作用域提前给已经声明了默认实参数后面的形参默认参数。例如：\",\"void f(int ,int = 6,int); void f(int,int,int =10); void f(int =4,int,int);\",\"调整顺序后，第二个形参拥有默认实参没有问题。但是在此之前第三个形参也必须拥有默认实参才可以。\"]},\"27\":{\"h\":\"2. 非模板类的成员函数默认实参必须与类内的声明组合\",\"t\":[\"对于非模板类的成员函数，类外定义中允许出现默认实参数，并于类体内的声明所提供的默认参数相组合。如果类外的默认实参会使成员函数变成默认构造函数或复制/移动（C++11起）构造函数/赋值运算符，那么程序非良构。对于类模板的成员函数，所有默认实参必须在成员函数初始声明处提供。\",\"。\"]},\"28\":{\"h\":\"3. C++ 形参包展开有 6 个点\",\"t\":[\"基本包展开template<typename... Args> // 类型形参包\",\"void f(Args...args){ // 函数形参包 // 创造合适的包展开场所（花括号包围的初始化器） int _[]{ (std::cout << args << ' ',0)... }; std::cout << '\\\\n'; // C++17 折叠表达式展开 ((std::cout << args << ' '), ...); }\",\"运行测试。这些都是使用了三个点 ... 进行展开。的确，包展开的语法就是三个点。6 个点 Args...... 的特殊情况我之所以会说有 6 个点的情况，那是因为在某些特殊情况下会叠加使用：\",\"template<class Ret, class... Args> void f(Ret(*func)(Args......)) { func(1); // 调用函数指针 }\",\"运行测试。这里的 Args...... 出现了 6 个点。其实不用感到奇怪，记住我们以往教程说的话：C++ 的类型就和拼图一样。既然 C++ 形参包展开的语法只有三个点，那么我们就按照已知的去思考。假设我们传入了 void 、int 类型，带入进去。Ret 就是 void ，Args... 展开就是 int，加上没有用到的那 ... 那么组合起来是？void(*func)(int...) 发现了吗？C 语言变长实参罢了，C++11 允许了变长实参的三个点可以不以逗号分隔。当然我们也可以继续用逗号分隔，例如：\",\"template<class Ret, class... Args> void f(Ret(*func)(Args...,...));\",\"中间加了一个逗号变成了 ...,...，这也是可以的的。完整代码：\",\"template<class Ret, class... Args> void f(Ret(*func)(Args......)) { // 加不加逗号都行 func(1); // 调用函数指针 } // 带可变参数的示例函数 void func(int a, ...) { // 加不加逗号都行 std::cout << \\\"沙贝 C 变长实参函数\\\" << a << std::endl; } int main() { f(func); }\"]},\"29\":{\"c\":[\"C++\"]},\"30\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"31\":{\"h\":\"Docker\"},\"32\":{\"h\":\"Container\"},\"33\":{\"h\":\"Base\"},\"34\":{\"h\":\"Cplusplus\"}},\"dirtCount\":0,\"index\":[[\"变长实参函数\",{\"1\":{\"28\":1}}],[\"沙贝\",{\"1\":{\"28\":1}}],[\"带可变参数的示例函数\",{\"1\":{\"28\":1}}],[\"带入进去\",{\"1\":{\"28\":1}}],[\"加不加逗号都行\",{\"1\":{\"28\":2}}],[\"加上没有用到的那\",{\"1\":{\"28\":1}}],[\"完整代码\",{\"1\":{\"28\":1}}],[\"中间加了一个逗号变成了\",{\"1\":{\"28\":1}}],[\"中运行\",{\"1\":{\"19\":1}}],[\"当然我们也可以继续用逗号分隔\",{\"1\":{\"28\":1}}],[\"当容器重新启动时\",{\"1\":{\"21\":1}}],[\"允许了变长实参的三个点可以不以逗号分隔\",{\"1\":{\"28\":1}}],[\"语言变长实参罢了\",{\"1\":{\"28\":1}}],[\"发现了吗\",{\"1\":{\"28\":1}}],[\"发行版\",{\"1\":{\"19\":1}}],[\"展开就是\",{\"1\":{\"28\":1}}],[\"假设我们传入了\",{\"1\":{\"28\":1}}],[\"形参包展开的语法只有三个点\",{\"1\":{\"28\":1}}],[\"形参包展开有\",{\"0\":{\"28\":1}}],[\"既然\",{\"1\":{\"28\":1}}],[\"记住我们以往教程说的话\",{\"1\":{\"28\":1}}],[\"记录一次线上sql问题优化\",{\"0\":{\"9\":1}}],[\"其实不用感到奇怪\",{\"1\":{\"28\":1}}],[\"出现了\",{\"1\":{\"28\":1}}],[\"出于本指南的目的\",{\"1\":{\"21\":1}}],[\"调用函数指针\",{\"1\":{\"28\":2}}],[\"调整顺序后\",{\"1\":{\"26\":1}}],[\"ret\",{\"1\":{\"28\":7}}],[\"run\",{\"1\":{\"21\":2}}],[\"那么组合起来是\",{\"1\":{\"28\":1}}],[\"那么我们就按照已知的去思考\",{\"1\":{\"28\":1}}],[\"那么程序非良构\",{\"1\":{\"27\":1}}],[\"那是因为在某些特殊情况下会叠加使用\",{\"1\":{\"28\":1}}],[\"的类型就和拼图一样\",{\"1\":{\"28\":1}}],[\"的特殊情况我之所以会说有\",{\"1\":{\"28\":1}}],[\"的确\",{\"1\":{\"28\":1}}],[\"包展开的语法就是三个点\",{\"1\":{\"28\":1}}],[\"进行展开\",{\"1\":{\"28\":1}}],[\"进行连接\",{\"1\":{\"21\":1}}],[\"运行测试\",{\"1\":{\"28\":2}}],[\"折叠表达式展开\",{\"1\":{\"28\":1}}],[\"花括号包围的初始化器\",{\"1\":{\"28\":1}}],[\"创造合适的包展开场所\",{\"1\":{\"28\":1}}],[\"函数形参包\",{\"1\":{\"28\":1}}],[\"类型\",{\"1\":{\"28\":1}}],[\"类型形参包\",{\"1\":{\"28\":1}}],[\"类外定义中允许出现默认实参数\",{\"1\":{\"27\":1}}],[\"基本包展开template<typename\",{\"1\":{\"28\":1}}],[\"个点的情况\",{\"1\":{\"28\":1}}],[\"个点\",{\"0\":{\"28\":1},\"1\":{\"28\":2}}],[\"所有默认实参必须在成员函数初始声明处提供\",{\"1\":{\"27\":1}}],[\"对于类模板的成员函数\",{\"1\":{\"27\":1}}],[\"对于非模板类的成员函数\",{\"1\":{\"27\":1}}],[\"赋值运算符\",{\"1\":{\"27\":1}}],[\"构造函数\",{\"1\":{\"27\":1}}],[\"移动\",{\"1\":{\"27\":1}}],[\"如果类外的默认实参会使成员函数变成默认构造函数或复制\",{\"1\":{\"27\":1}}],[\"如果您需要特定版本\",{\"1\":{\"20\":1}}],[\"并于类体内的声明所提供的默认参数相组合\",{\"1\":{\"27\":1}}],[\"并标榜自己是\",{\"1\":{\"19\":1}}],[\"非模板类的成员函数默认实参必须与类内的声明组合\",{\"0\":{\"27\":1}}],[\"第二个形参拥有默认实参没有问题\",{\"1\":{\"26\":1}}],[\"例如\",{\"1\":{\"26\":1,\"28\":1}}],[\"但是在此之前第三个形参也必须拥有默认实参才可以\",{\"1\":{\"26\":1}}],[\"但是必须在当前作用域提前给已经声明了默认实参数后面的形参默认参数\",{\"1\":{\"26\":1}}],[\"但是考虑到排序对服务层的压力还是比较大\",{\"1\":{\"10\":1}}],[\"原因\",{\"1\":{\"26\":1}}],[\"上面代码运行不会由任何问题\",{\"1\":{\"26\":1}}],[\"上运行\",{\"1\":{\"19\":1,\"21\":1}}],[\"404\",{\"1\":{\"30\":1}}],[\"4\",{\"1\":{\"26\":1}}],[\"not\",{\"1\":{\"30\":1}}],[\"n\",{\"1\":{\"26\":1,\"28\":1}}],[\"names\",{\"1\":{\"21\":1}}],[\"name\",{\"1\":{\"21\":1}}],[\"name=postgres13\",{\"1\":{\"21\":1}}],[\"<<c<<\",{\"1\":{\"26\":1}}],[\"<<\",{\"1\":{\"26\":1,\"28\":8}}],[\"<=\",{\"1\":{\"10\":3}}],[\"base\",{\"0\":{\"33\":1}}],[\"b\",{\"1\":{\"26\":1}}],[\"by\",{\"1\":{\"10\":3}}],[\"6\",{\"0\":{\"28\":1},\"1\":{\"26\":3,\"28\":3}}],[\"6cb3293fe725\",{\"1\":{\"21\":1}}],[\"=10\",{\"1\":{\"26\":1}}],[\"=4\",{\"1\":{\"26\":2}}],[\"=\",{\"1\":{\"26\":2}}],[\"found\",{\"1\":{\"30\":1}}],[\"func\",{\"1\":{\"28\":8}}],[\"fn\",{\"1\":{\"26\":1}}],[\"f\",{\"1\":{\"26\":6,\"28\":5}}],[\"from\",{\"1\":{\"10\":5}}],[\"默认实参之后的参数也必须拥有默认实参\",{\"0\":{\"26\":1}}],[\"因此您可以使用所有熟悉的命令和标志\",{\"1\":{\"22\":1}}],[\"命令行界面\",{\"1\":{\"22\":1}}],[\"命令将在\",{\"1\":{\"21\":1}}],[\"连接到postgresql服务器\",{\"0\":{\"22\":1}}],[\"3\",{\"0\":{\"22\":1,\"28\":1}}],[\"30\",{\"1\":{\"19\":1}}],[\"此外\",{\"1\":{\"21\":1}}],[\"实例\",{\"1\":{\"22\":1}}],[\"实例现在正在\",{\"1\":{\"21\":1}}],[\"实际测试\",{\"1\":{\"11\":1}}],[\"恭喜\",{\"1\":{\"21\":1}}],[\"u\",{\"1\":{\"22\":1}}],[\"up\",{\"1\":{\"21\":1}}],[\"using\",{\"1\":{\"10\":2}}],[\"user\",{\"1\":{\"10\":5}}],[\"args\",{\"1\":{\"28\":10}}],[\"args>\",{\"1\":{\"28\":4}}],[\"a\",{\"1\":{\"26\":1,\"28\":2}}],[\"ago\",{\"1\":{\"21\":1}}],[\"and\",{\"1\":{\"10\":3}}],[\"cplusplus\",{\"0\":{\"34\":1}}],[\"class\",{\"1\":{\"28\":3}}],[\"c++11\",{\"1\":{\"28\":1}}],[\"c++11起\",{\"1\":{\"27\":1}}],[\"c++17\",{\"1\":{\"28\":1}}],[\"c++\",{\"0\":{\"28\":1},\"1\":{\"28\":2},\"2\":{\"29\":1}}],[\"c++默认参数\",{\"0\":{\"24\":1,\"25\":1}}],[\"c\",{\"1\":{\"26\":1,\"28\":2}}],[\"cout\",{\"1\":{\"28\":4}}],[\"count<<a<<\",{\"1\":{\"26\":1}}],[\"command\",{\"1\":{\"21\":1}}],[\"container\",{\"0\":{\"32\":1},\"1\":{\"21\":1}}],[\"created\",{\"1\":{\"21\":1}}],[\"create\",{\"1\":{\"10\":6,\"21\":1}}],[\"是我们用来创建容器的图像的名称\",{\"1\":{\"21\":1}}],[\"根密码\",{\"1\":{\"21\":1}}],[\"内的数据文件夹绑定到postgres\",{\"1\":{\"21\":1}}],[\"客户端连接\",{\"1\":{\"22\":1}}],[\"客户端\",{\"1\":{\"21\":1,\"22\":1}}],[\"绑定到主机上的相同端口\",{\"1\":{\"21\":1}}],[\"分配给您的容器实例\",{\"1\":{\"21\":1}}],[\"将名称\",{\"1\":{\"21\":1}}],[\"将以分离模式运行此容器\",{\"1\":{\"21\":1}}],[\"将排序放到子查询中\",{\"1\":{\"10\":1}}],[\"让我们分解一下这个语法\",{\"1\":{\"21\":1}}],[\"该\",{\"1\":{\"21\":1}}],[\"endl\",{\"1\":{\"28\":1}}],[\"entrypoint\",{\"1\":{\"21\":1}}],[\"exec\",{\"1\":{\"22\":1}}],[\"e设置环境变量\",{\"1\":{\"21\":1}}],[\"e\",{\"1\":{\"21\":1}}],[\"5432\",{\"1\":{\"21\":6}}],[\"你可以部署一个容器\",{\"1\":{\"21\":1}}],[\"现在你的机器上有\",{\"1\":{\"21\":1}}],[\"现在让我们拉取图像\",{\"1\":{\"20\":1}}],[\"void\",{\"1\":{\"26\":6,\"28\":8}}],[\"volume您在上一步中创建的本地\",{\"1\":{\"21\":1}}],[\"volume\",{\"1\":{\"21\":3}}],[\"v选项将容器卷\",{\"1\":{\"21\":1}}],[\"v\",{\"1\":{\"21\":1}}],[\"var\",{\"1\":{\"21\":3}}],[\"以便它在后台运行\",{\"1\":{\"21\":1}}],[\"以下是该命令中每个参数的含义\",{\"1\":{\"21\":1}}],[\"以下命令将在您的本地计算机中创建卷\",{\"1\":{\"21\":1}}],[\"以及一些技术总结\",{\"1\":{\"4\":1,\"8\":1,\"12\":1}}],[\"卷\",{\"1\":{\"21\":1}}],[\"卷并将其附加到您的\",{\"1\":{\"21\":1}}],[\"卷或绑定安装来持久化您的数据库\",{\"1\":{\"21\":1}}],[\"安装应该\",{\"1\":{\"21\":1}}],[\"否则\",{\"1\":{\"21\":1}}],[\"您还可以使用postgresql\",{\"1\":{\"22\":1}}],[\"您的新\",{\"1\":{\"21\":1}}],[\"您的数据将丢失\",{\"1\":{\"21\":1}}],[\"您将能够localhost\",{\"1\":{\"21\":1}}],[\"您可以通过附加到容器并运行psql命令来获得交互式\",{\"1\":{\"22\":1}}],[\"您可以通过列出正在运行的容器来检查容器是否正在运行\",{\"1\":{\"21\":1}}],[\"您可以稍后与\",{\"1\":{\"21\":1}}],[\"您可以使用以下命令检查正在运行的\",{\"1\":{\"21\":1}}],[\"您可以使用\",{\"1\":{\"19\":1}}],[\"您需要设置一个\",{\"1\":{\"21\":1}}],[\"从\",{\"0\":{\"21\":1}}],[\"存储库中提取最新可用版本的\",{\"1\":{\"20\":1}}],[\"hub\",{\"1\":{\"20\":1}}],[\"hub获取现有的\",{\"1\":{\"20\":1}}],[\"ports\",{\"1\":{\"21\":1}}],[\"postgres13\",{\"1\":{\"21\":3,\"22\":1}}],[\"postgres\",{\"1\":{\"20\":1,\"21\":6,\"22\":1}}],[\"postgresql\",{\"0\":{\"20\":1,\"21\":1},\"1\":{\"19\":2,\"20\":3,\"21\":11,\"22\":3},\"2\":{\"23\":1}}],[\"postgresql是一个开源的对象关系数据库管理系统\",{\"1\":{\"19\":1}}],[\"psql如果您在主机上预安装了postgresql\",{\"1\":{\"22\":1}}],[\"psql\",{\"1\":{\"22\":1}}],[\"ps\",{\"1\":{\"21\":1}}],[\"p会将\",{\"1\":{\"21\":1}}],[\"password\",{\"1\":{\"21\":1}}],[\"password=your\",{\"1\":{\"21\":1}}],[\"p\",{\"1\":{\"21\":1}}],[\"pull\",{\"1\":{\"20\":1}}],[\"std\",{\"1\":{\"26\":1,\"28\":5}}],[\"status\",{\"1\":{\"21\":1}}],[\"shell\",{\"1\":{\"22\":1}}],[\"s\",{\"1\":{\"21\":1}}],[\"sudo\",{\"1\":{\"20\":1,\"21\":4,\"22\":1}}],[\"select\",{\"1\":{\"10\":5}}],[\"为所需版本\",{\"1\":{\"20\":1}}],[\"请将标签更改\",{\"1\":{\"20\":1}}],[\"logs\",{\"1\":{\"21\":1}}],[\"lib\",{\"1\":{\"21\":3}}],[\"limit\",{\"1\":{\"10\":3}}],[\"latest\",{\"1\":{\"20\":2}}],[\"9\",{\"1\":{\"20\":1}}],[\"版本\",{\"1\":{\"20\":1}}],[\"官方镜像\",{\"1\":{\"20\":1}}],[\"我们将创建一个\",{\"1\":{\"21\":1}}],[\"我们需要从docker\",{\"1\":{\"20\":1}}],[\"我们在这里要做的是下载postgresql镜像\",{\"1\":{\"19\":1}}],[\"首先\",{\"1\":{\"20\":1}}],[\"镜像和一个用于保存数据的卷\",{\"1\":{\"21\":1}}],[\"镜像运行容器\",{\"0\":{\"21\":1}}],[\"镜像适用于\",{\"1\":{\"20\":1}}],[\"镜像\",{\"0\":{\"20\":1}}],[\"服务器\",{\"0\":{\"20\":1,\"21\":1}}],[\"拉取一个\",{\"0\":{\"20\":1}}],[\"最后连接到正在运行的postgresql实例\",{\"1\":{\"19\":1}}],[\"使用psql在您的主机上运行的postgresql\",{\"1\":{\"21\":1}}],[\"使用上述命令将从\",{\"1\":{\"20\":1}}],[\"使用特定参数运行镜像\",{\"1\":{\"19\":1}}],[\"使容器能够在所有主要linux\",{\"1\":{\"19\":1}}],[\"检查镜像是否准备好\",{\"1\":{\"19\":1}}],[\"windows\",{\"1\":{\"19\":1}}],[\"where\",{\"1\":{\"10\":3}}],[\"main\",{\"1\":{\"26\":1,\"28\":1}}],[\"macos\",{\"1\":{\"19\":1}}],[\"minutes\",{\"1\":{\"21\":2}}],[\"microsoft\",{\"1\":{\"19\":1}}],[\"和\",{\"1\":{\"19\":1,\"20\":1}}],[\"容器的日志文件\",{\"1\":{\"21\":1}}],[\"容器端口\",{\"1\":{\"21\":1}}],[\"容器中创建一个正在运行的\",{\"1\":{\"21\":1}}],[\"容器连接\",{\"1\":{\"21\":1}}],[\"容器\",{\"1\":{\"21\":1}}],[\"容器基于开放标准\",{\"1\":{\"19\":1}}],[\"容器让您可以快速启动新应用程序\",{\"1\":{\"19\":1}}],[\"就是\",{\"1\":{\"28\":1}}],[\"就像它是远程服务器一样\",{\"1\":{\"19\":1}}],[\"就算挂了也不影响核心链路\",{\"1\":{\"11\":1}}],[\"而不会因依赖项而使您的系统变得混乱\",{\"1\":{\"19\":1}}],[\"行业的标准\",{\"1\":{\"19\":1}}],[\"部署和运行分布式应用程序方面\",{\"1\":{\"19\":1}}],[\"世界上最先进的开源关系数据库\",{\"1\":{\"19\":1}}],[\"多年\",{\"1\":{\"19\":1}}],[\"它已经存在了\",{\"1\":{\"19\":1}}],[\"d\",{\"1\":{\"21\":2}}],[\"data\",{\"1\":{\"21\":2}}],[\"docker\",{\"0\":{\"20\":1,\"21\":1,\"31\":1},\"1\":{\"19\":4,\"20\":2,\"21\":11,\"22\":2},\"2\":{\"23\":1}}],[\"docker已成为\",{\"1\":{\"19\":1}}],[\"docker下载并启动postgresql\",{\"0\":{\"19\":1}}],[\"desc\",{\"1\":{\"10\":3}}],[\"前端开发\",{\"0\":{\"15\":1,\"17\":1},\"2\":{\"16\":1,\"18\":1}}],[\"设计模式\",{\"0\":{\"13\":1},\"2\":{\"14\":1}}],[\"数据库\",{\"0\":{\"12\":1},\"1\":{\"19\":1,\"21\":1}}],[\"也可以上es\",{\"1\":{\"11\":1}}],[\"尽量像这种批量任务可以使用定时任务在低峰期定期执行\",{\"1\":{\"11\":1}}],[\"避免不合理的业务需求\",{\"1\":{\"11\":1}}],[\"具体问题具体分析\",{\"1\":{\"11\":1}}],[\"去优化sql\",{\"1\":{\"11\":1}}],[\"在函数声明中所拥有的默认实参之后的形参必须拥有在这个或同一作用域中先前的声明中所提供的默认实参\",{\"1\":{\"26\":1}}],[\"在这种情况下\",{\"1\":{\"21\":1}}],[\"在容器内的目录中\",{\"1\":{\"21\":1}}],[\"在容器中运行\",{\"1\":{\"19\":1}}],[\"在部署之前\",{\"1\":{\"21\":1}}],[\"在\",{\"1\":{\"19\":1}}],[\"在轻松打包\",{\"1\":{\"19\":1}}],[\"在设计时就应该考虑了业务功能的合理性\",{\"1\":{\"11\":1}}],[\"在数据量较大时应尽量在存储引擎曾通过索引覆盖降低回表和优化排序\",{\"1\":{\"11\":1}}],[\"在不同数据量下这几种sql执行效果不同\",{\"1\":{\"11\":1}}],[\"问题总结\",{\"0\":{\"11\":1}}],[\"速度确实快了一些\",{\"1\":{\"10\":1}}],[\"经过测试\",{\"1\":{\"10\":1}}],[\"经过分析\",{\"1\":{\"10\":1}}],[\"template<class\",{\"1\":{\"28\":3}}],[\"tcp\",{\"1\":{\"21\":2}}],[\"tmp\",{\"1\":{\"10\":2}}],[\"time\",{\"1\":{\"10\":6}}],[\"join\",{\"1\":{\"10\":2}}],[\"int\",{\"1\":{\"26\":19,\"28\":6}}],[\"inner\",{\"1\":{\"10\":2}}],[\"image\",{\"1\":{\"21\":1}}],[\"it\",{\"1\":{\"19\":1,\"22\":1}}],[\"id\",{\"1\":{\"10\":7,\"21\":1}}],[\"考虑到数据库量比较大对sql进行如下优化\",{\"1\":{\"10\":1}}],[\"这也是可以的的\",{\"1\":{\"28\":1}}],[\"这里的\",{\"1\":{\"28\":1}}],[\"这些都是使用了三个点\",{\"1\":{\"28\":1}}],[\"这提供了完整的\",{\"1\":{\"22\":1}}],[\"这种数据量比较大但是对一致性要求不高的业务可以考虑用从库慢慢执行\",{\"1\":{\"11\":1}}],[\"这个分数据库目前数据量为100万\",{\"1\":{\"10\":1}}],[\"这条sql是先从数据库把数据从数据库查出后再拿到服务层排序\",{\"1\":{\"10\":1}}],[\"且范围查询导致索引失效\",{\"1\":{\"10\":1}}],[\"由于数据量比较大\",{\"1\":{\"10\":1}}],[\"主要出现问题的地方在范围查询上\",{\"1\":{\"10\":1}}],[\"order\",{\"1\":{\"10\":3}}],[\"2\",{\"0\":{\"11\":1,\"21\":1,\"27\":1}}],[\"27\",{\"1\":{\"10\":3}}],[\"2024\",{\"1\":{\"10\":3}}],[\"2022\",{\"1\":{\"10\":3}}],[\"0\",{\"1\":{\"21\":4,\"28\":1}}],[\"06\",{\"1\":{\"10\":3}}],[\"01\",{\"1\":{\"10\":6}}],[\">5432\",{\"1\":{\"21\":2}}],[\">\",{\"1\":{\"10\":3}}],[\"本次老代码线上问题sql\",{\"0\":{\"10\":1}}],[\"本栏主要记录并学习前端开发\",{\"1\":{\"15\":1,\"17\":1}}],[\"本栏主要记录并学习设计模式\",{\"1\":{\"13\":1}}],[\"本栏主要记录并学习java开发\",{\"1\":{\"6\":1}}],[\"本栏主要记录生产上遇到的一些实际问题\",{\"1\":{\"4\":1,\"8\":1,\"12\":1}}],[\"19\",{\"1\":{\"21\":2}}],[\"13\",{\"1\":{\"20\":1}}],[\"12\",{\"1\":{\"20\":1}}],[\"11\",{\"1\":{\"20\":1}}],[\"10\",{\"1\":{\"20\":1,\"26\":1}}],[\"1500000\",{\"1\":{\"10\":3}}],[\"1\",{\"0\":{\"10\":1,\"20\":1,\"26\":1},\"1\":{\"28\":2}}],[\"学习笔记\",{\"0\":{\"6\":1},\"2\":{\"7\":1}}],[\"项目实战\",{\"0\":{\"4\":1,\"8\":1}}],[\"项目开发\",{\"2\":{\"3\":1,\"5\":1}}],[\"开发日记\",{\"0\":{\"2\":1}}],[\"纸飞机的成长日记\",{\"1\":{\"1\":1}}],[\"介绍页\",{\"0\":{\"1\":1}}],[\"博客主页\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
