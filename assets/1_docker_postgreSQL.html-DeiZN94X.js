import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,e as t}from"./app-R-y9qnkE.js";const a={},r=t(`<p>PostgreSQL是一个开源的对象关系数据库管理系统。它已经存在了 30 多年，并标榜自己是“世界上最先进的开源关系数据库”。</p><p>在轻松打包、部署和运行分布式应用程序方面，Docker已成为 IT 行业的标准。Docker 容器让您可以快速启动新应用程序，而不会因依赖项而使您的系统变得混乱。</p><p>您可以使用 Docker 在容器中运行 PostgreSQL 数据库，就像它是远程服务器一样。Docker 容器基于开放标准，使容器能够在所有主要Linux 发行版、MacOS 和 Microsoft Windows 上运行。</p><p>在 Docker 中运行 PostgreSQL 我们在这里要做的是下载PostgreSQL镜像，检查镜像是否准备好，使用特定参数运行镜像，最后连接到正在运行的PostgreSQL实例。</p><h2 id="_1-拉取一个-postgresql-服务器-docker-镜像" tabindex="-1"><a class="header-anchor" href="#_1-拉取一个-postgresql-服务器-docker-镜像"><span>1. 拉取一个 PostgreSQL 服务器 Docker 镜像</span></a></h2><p>首先，我们需要从Docker Hub获取现有的 PostgreSQL 官方镜像。镜像适用于 PostgreSQL 版本 9、10、11、12 和 13。如果您需要特定版本，latest 请将标签更改 为所需版本。</p><p>现在让我们拉取图像：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用上述命令将从 Docker Hub 存储库中提取最新可用版本的 PostgreSQL。</p><h2 id="_2-从-postgresql-服务器-docker-镜像运行容器" tabindex="-1"><a class="header-anchor" href="#_2-从-postgresql-服务器-docker-镜像运行容器"><span>2. 从 PostgreSQL 服务器 Docker 镜像运行容器</span></a></h2><p>在部署之前，您需要设置一个 Docker 卷或绑定安装来持久化您的数据库。否则，当容器重新启动时，您的数据将丢失。安装应该 /var/lib/postgresql/data 在容器内的目录中。</p><p>出于本指南的目的，我们将创建一个 docker 卷并将其附加到您的 PostgreSQL 容器。</p><p>以下命令将在您的本地计算机中创建卷，您可以稍后与 PostgreSQL 容器连接：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> volume</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres-volume</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在你的机器上有 PostgreSQL 镜像和一个用于保存数据的卷，你可以部署一个容器：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name=postgres13</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 5432:5432</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres-volume:/var/lib/postgresql/data</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> POSTGRES_PASSWORD=your_password</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该 docker run 命令将在 Docker 容器中创建一个正在运行的 PostgreSQL 数据库。</p><p>让我们分解一下这个语法。以下是该命令中每个参数的含义：</p><p>-d 将以分离模式运行此容器，以便它在后台运行。 --name 将名称“postgres13”分配给您的容器实例。 -p会将 PostgreSQL 容器端口 5432 绑定到主机上的相同端口。您将能够localhost:5432 使用psql在您的主机上运行的PostgreSQL 客户端 ( )进行连接 。 -v选项将容器卷 ( /var/lib/postgresql)内的数据文件夹绑定到postgres-volume您在上一步中创建的本地 Docker 卷 ( )。 -e设置环境变量。在这种情况下，PostgreSQL 根密码。 postgres 是我们用来创建容器的图像的名称。 您可以通过列出正在运行的容器来检查容器是否正在运行：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CONTAINER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   IMAGE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   COMMAND</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   CREATED</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   STATUS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   PORTS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   NAMES</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6cb3293fe725</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   postgres</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   19</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minutes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ago</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   Up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 19</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minutes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0.0.0.0:5432</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">5432/tcp,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::5432</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">5432/tcp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   postgres13</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>恭喜！您的新 PostgreSQL 实例现在正在 Docker 上运行。</p><p>此外，您可以使用以下命令检查正在运行的 PostgreSQL 容器的日志文件：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres13</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-连接到postgresql服务器" tabindex="-1"><a class="header-anchor" href="#_3-连接到postgresql服务器"><span>3. 连接到PostgreSQL服务器</span></a></h2><p>您可以通过附加到容器并运行psql命令来获得交互式 PostgreSQL shell 。这提供了完整的 PostgreSQL 命令行界面，因此您可以使用所有熟悉的命令和标志。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres13</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> psql</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -U</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>psql如果您在主机上预安装了PostgreSQL 客户端，您还可以使用PostgreSQL 客户端连接 PostgreSQL Docker 实例。</p><p>或者使用idea链接数据库登录 账号：postgres 密码：123456</p>`,28),h=[r];function l(n,p){return e(),i("div",null,h)}const d=s(a,[["render",l],["__file","1_docker_postgreSQL.html.vue"]]),g=JSON.parse('{"path":"/study/container/docker/1_docker_postgreSQL.html","title":"docker下载并启动PostgreSQL","lang":"zh-CN","frontmatter":{"title":"docker下载并启动PostgreSQL","index":true,"tag":"PostgreSQL","star":true,"description":"PostgreSQL是一个开源的对象关系数据库管理系统。它已经存在了 30 多年，并标榜自己是“世界上最先进的开源关系数据库”。 在轻松打包、部署和运行分布式应用程序方面，Docker已成为 IT 行业的标准。Docker 容器让您可以快速启动新应用程序，而不会因依赖项而使您的系统变得混乱。 您可以使用 Docker 在容器中运行 PostgreSQL...","head":[["meta",{"property":"og:url","content":"https://https://github.com/WQMSLX/wqmslx.github.io/study/container/docker/1_docker_postgreSQL.html"}],["meta",{"property":"og:site_name","content":"纸飞机的博客"}],["meta",{"property":"og:title","content":"docker下载并启动PostgreSQL"}],["meta",{"property":"og:description","content":"PostgreSQL是一个开源的对象关系数据库管理系统。它已经存在了 30 多年，并标榜自己是“世界上最先进的开源关系数据库”。 在轻松打包、部署和运行分布式应用程序方面，Docker已成为 IT 行业的标准。Docker 容器让您可以快速启动新应用程序，而不会因依赖项而使您的系统变得混乱。 您可以使用 Docker 在容器中运行 PostgreSQL..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-04T16:49:38.000Z"}],["meta",{"property":"article:author","content":"纸飞机"}],["meta",{"property":"article:tag","content":"PostgreSQL"}],["meta",{"property":"article:modified_time","content":"2024-08-04T16:49:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker下载并启动PostgreSQL\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-04T16:49:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"纸飞机\\",\\"url\\":\\"https://wqmslx.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 拉取一个 PostgreSQL 服务器 Docker 镜像","slug":"_1-拉取一个-postgresql-服务器-docker-镜像","link":"#_1-拉取一个-postgresql-服务器-docker-镜像","children":[]},{"level":2,"title":"2. 从 PostgreSQL 服务器 Docker 镜像运行容器","slug":"_2-从-postgresql-服务器-docker-镜像运行容器","link":"#_2-从-postgresql-服务器-docker-镜像运行容器","children":[]},{"level":2,"title":"3. 连接到PostgreSQL服务器","slug":"_3-连接到postgresql服务器","link":"#_3-连接到postgresql服务器","children":[]}],"git":{"createdTime":1722770150000,"updatedTime":1722790178000,"contributors":[{"name":"wangqiming","email":"1359632259@qq.com","commits":1}]},"readingTime":{"minutes":3.13,"words":938},"filePathRelative":"study/container/docker/1_docker_postgreSQL.md","localizedDate":"2024年8月4日","excerpt":"<p>PostgreSQL是一个开源的对象关系数据库管理系统。它已经存在了 30 多年，并标榜自己是“世界上最先进的开源关系数据库”。</p>\\n<p>在轻松打包、部署和运行分布式应用程序方面，Docker已成为 IT 行业的标准。Docker 容器让您可以快速启动新应用程序，而不会因依赖项而使您的系统变得混乱。</p>\\n<p>您可以使用 Docker 在容器中运行 PostgreSQL 数据库，就像它是远程服务器一样。Docker 容器基于开放标准，使容器能够在所有主要Linux 发行版、MacOS 和 Microsoft Windows 上运行。</p>\\n<p>在 Docker 中运行 PostgreSQL\\n我们在这里要做的是下载PostgreSQL镜像，检查镜像是否准备好，使用特定参数运行镜像，最后连接到正在运行的PostgreSQL实例。</p>","autoDesc":true}');export{d as comp,g as data};
